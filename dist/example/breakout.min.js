/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 6);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__App_js__ = __webpack_require__(1);


(function () {
    var html = document.documentElement;
    var canvas = document.getElementById("myCanvas");
    var app;

    canvas.width = html.clientWidth * 0.5;
    canvas.height = html.clientHeight * 0.7;

    app = new __WEBPACK_IMPORTED_MODULE_0__App_js__["a" /* default */](canvas);
    app.init();
})();

/***/ }),
/* 1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Brick_js__ = __webpack_require__(3);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Paddle_js__ = __webpack_require__(4);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Ball_js__ = __webpack_require__(2);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__Text_js__ = __webpack_require__(5);





class App {
    constructor(canvas) {
        this.screenWidth = canvas.width;
        this.screenHeight = canvas.height;
        this.ctx = canvas.getContext("2d");
        this.pressRight = false;
        this.pressLeft = false;
        this.handle = null;
        this.listen();
    }

    init() {
        var screenWidth = this.screenWidth,
            screenHeight = this.screenHeight;
        this.bricks = [];
        this.createBricks(6, 5);
        this.paddle = new __WEBPACK_IMPORTED_MODULE_1__Paddle_js__["a" /* default */](screenWidth * 0.85 / 2, screenHeight * 0.975, screenWidth * 0.15, screenHeight * 0.025);
        var ballRadius = this.bricks[0].height / 2;
        this.ball = new __WEBPACK_IMPORTED_MODULE_2__Ball_js__["a" /* default */](screenWidth / 2, screenHeight * 0.975 - ballRadius, ballRadius);
        this.text = new __WEBPACK_IMPORTED_MODULE_3__Text_js__["a" /* default */]("", screenWidth * 0.5, screenHeight * 0.65);
        this.state = 0; // 0 => stop, 1 => start, 2 => over
        this.text.content = "Press Enter to Start";
        this.draw();
    }

    draw() {
        var ctx = this.ctx,
            ball = this.ball,
            paddle = this.paddle,
            me = this;

        this._clearScreen(ctx);

        this._drawBricks(ctx);
        this._drawPaddle(ctx);
        this._drawBall(ctx);

        if (this.bricks.length == 0) {
            this.over();
            return;
        }

        var bY = ball.y,
            bX = ball.x,
            bR = ball.radius,
            sH = this.screenHeight,
            pH = paddle.height,
            pW = paddle.width,
            pX = paddle.x,
            pY = paddle.y;

        // ball hit paddle
        if (bX > pX && bX < pX + pW) {
            if (bY >= pY - bR && bY < pY || bY >= pY - ball.speed && bY < pY) {
                ball.dy = -ball.speed;
            }
        } else if (bX > pX - bR && bX <= pX || bX < pX + pW + bR && bX > pX + pW) {
            if (bY >= pY - bR && bY <= pY + pH) {
                ball.dy = -ball.speed;
                ball.dx = -ball.dx;
            }
        } else if (bY > sH + bR) {
            this.over();
        }

        // ball hit brick
        this.bricks.forEach(function (b, index) {
            var left = b.x - 2.5,
                right = b.x + b.width + 2.5,
                up = b.y - 2.5,
                down = b.y + b.height + 2.5;

            if (bX >= left && bX <= right) {
                if (bY >= up - bR && bY <= up || bY >= down && bY <= down + bR) {
                    ball.dy = ball.speed;
                    me.bricks.splice(index, 1);
                }
            }

            if (bY >= up && bY <= down) {
                if (bX <= left && bX >= left - bR || bX >= right && bX <= right + bR) {
                    ball.dy = ball.speed;
                    ball.dx = -ball.dx;
                    me.bricks.splice(index, 1);
                }
            }
        });

        this.text.draw(ctx);

        if (this.state == 1) this.handle = window.requestAnimationFrame(this.draw.bind(this));
    }

    _clearScreen(ctx) {
        ctx.clearRect(0, 0, this.screenWidth, this.screenHeight);
    }

    _drawBricks(ctx) {
        this.bricks.forEach(function (brick) {
            brick.draw(ctx);
        });
    }

    _drawPaddle(ctx) {
        var paddle = this.paddle,
            displacement = 0;

        if (this.pressRight && paddle.x < this.screenWidth - paddle.width - paddle.speed) displacement = paddle.speed;
        if (this.pressLeft && paddle.x > paddle.speed) displacement = -paddle.speed;
        paddle.x += displacement;
        paddle.draw(ctx);
    }

    _drawBall(ctx) {
        var ball = this.ball;

        if (ball.dx == 0 && this.state == 1) {
            ball.dx = ball.speed;
            ball.dy = -ball.speed;
        }
        if (ball.x >= this.screenWidth - ball.radius) ball.dx = -ball.speed;
        if (ball.x <= ball.radius) ball.dx = ball.speed;
        if (ball.y <= ball.radius) ball.dy = ball.speed;

        ball.x += ball.dx;
        ball.y += ball.dy;
        ball.draw(ctx);
    }

    start() {
        this.state = 1;
        this.paddle.speed = 5;
        this.ball.speed = 5;
        this.text.content = "";
        this.draw();
    }

    restart() {
        this.init();
    }

    pause() {
        if (this.state != 1) return;
        this.state = 0;
        this.text.content = "Press Enter to Start";
        this.draw();
    }

    over() {
        this.state = 2;
        this.text.content = "Press Space to Restart";
        window.cancelAnimationFrame(this.handle);
    }

    createBricks(row, column) {
        var space = 5;
        var brickWidth = (this.screenWidth - space * (column - 1)) / column;
        var brickHeight = (this.screenHeight * 0.25 - space * (row - 1) / 2) / row;

        for (var c = 0; c < column; c++) {
            for (var r = 0; r < row; r++) {
                var x = space * c + brickWidth * c;
                var y = space * r + brickHeight * r;
                this.bricks.push(new __WEBPACK_IMPORTED_MODULE_0__Brick_js__["a" /* default */](x, y, brickWidth, brickHeight));
            }
        }
    }

    listen() {
        var me = this;
        document.addEventListener("keypress", function (e) {
            switch (e.keyCode) {
                case 32:
                    if (me.state == 1) {
                        me.pause();
                    } else if (me.state == 2) {
                        me.restart();
                    }
                    break;
                case 13:
                    if (me.state == 0) me.start();
                    // if (game.states.over) location.reload();
                    break;
            }
        });
        document.addEventListener("keydown", function (e) {
            if (e.keyCode == 39) me.pressRight = true;
            if (e.keyCode == 37) me.pressLeft = true;
        });
        document.addEventListener("keyup", function (e) {
            if (e.keyCode == 39) me.pressRight = false;
            if (e.keyCode == 37) me.pressLeft = false;
        });
    }
}

/* harmony default export */ __webpack_exports__["a"] = App;

/***/ }),
/* 2 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class Ball {
    constructor(x, y, radius) {
        this.x = x;
        this.y = y;
        this.dx = 0;
        this.dy = 0;
        this.radius = radius;
        this.speed = 0;
    }

    draw(ctx) {
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
        ctx.fill();
        ctx.closePath();
    }
}

/* harmony default export */ __webpack_exports__["a"] = Ball;

/***/ }),
/* 3 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class Brick {
    constructor(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
    }

    draw(ctx) {
        ctx.beginPath();
        ctx.fillStyle = "#0095DD";
        ctx.rect(this.x, this.y, this.width, this.height);
        ctx.fill();
        ctx.closePath();
    }
}

/* harmony default export */ __webpack_exports__["a"] = Brick;

/***/ }),
/* 4 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class Paddle {
    constructor(x, y, width, height) {
        this.x = x;
        this.y = y;
        this.width = width;
        this.height = height;
        this.speed = 0;
    }

    draw(ctx) {
        ctx.beginPath();
        ctx.rect(this.x, this.y, this.width, this.height);
        ctx.fillStyle = "#0095DD";
        ctx.fill();
        ctx.closePath();
    }
}

/* harmony default export */ __webpack_exports__["a"] = Paddle;

/***/ }),
/* 5 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
class Text {
    constructor(content, x, y) {
        this.content = content;
        this.x = x;
        this.y = y;
    }

    draw(ctx) {
        ctx.font = "20px Arial";
        ctx.textAlign = "center";
        ctx.fillStyle = "black";
        ctx.fillText(this.content, this.x, this.y);
    }
}

/* harmony default export */ __webpack_exports__["a"] = Text;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(0);


/***/ })
/******/ ]);